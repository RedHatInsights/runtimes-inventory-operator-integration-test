apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: insights-operator-IT
spec:
  description: |
    An integration test which provisions an ephemeral Hypershift cluster and deploys an Operator
    bundle from a Konflux snapshot.
  params:
    - description: Snapshot of the application
      name: SNAPSHOT
      default: '{"components": [{"name":"runtimes-inventory-operator", "containerImage": "quay.io/insights-runtimes/runtimes-inventory-operator-catalog-prod:latest"}]}'
      type: string
    - description: Namespace where the the Operator bundle will be deployed.
      name: NAMESPACE
      default: openshift-operators
      type: string
    - description: Duration to wait for bundle installation to complete before failing.
      name: INSTALL_TIMEOUT
      default: 5m
      type: string
  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/integration-examples
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/test_metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
    - name: provision-eaas-space
      runAfter:
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - provision-eaas-space
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        steps:
          - name: get-supported-versions
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "$(steps.get-supported-versions.results.versions[0])."
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: version
                value: "$(steps.pick-version.results.version)"
    - name: deploy-operator
      runAfter:
        - provision-cluster
      params:
        - name: bundleImage
          value: "$(tasks.parse-metadata.results.component-container-image)"
        - name: namespace
          value: "$(params.NAMESPACE)"
        - name: installTimeout
          value: "$(params.INSTALL_TIMEOUT)"
      taskSpec:
        params:
          - name: bundleImage
            type: string
          - name: namespace
            type: string
          - name: installTimeout
            type: string
        volumes:
          - name: credentials
            emptyDir: {}
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - name: operator-sdk-run-bundle
            image: quay.io/operator-framework/operator-sdk:latest
            env:
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            args:
              - run
              - bundle
              - --namespace
              - "$(params.namespace)"
              - --timeout
              - "$(params.installTimeout)"
              - "$(params.bundleImage)"
    - name: run-tests
      runAfter:
        - deploy-operator
      taskSpec:
        volumes:
          - name: credentials
            emptyDir: { }
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
              - name: PROD_OFFLINE_TOKEN
                value: prod-offline-token
          - name: prepare-tests
            image: registry.redhat.io/openshift4/ose-cli:latest
            env:
              - name: OCP_API_URL
                value: $(steps-get-kubeconfig.results.apiServerURL)
              - name: OCP_USERNAME
                value: $(steps-get-kubeconfig.results.username)
              - name: OCP_PASSWORD_FILE
                value: "/credentials/$(steps.get-kubeconfig.results.passwordPath)"
              - name: OCP_PROJECT
                value: "test-project"
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            script: |
              OCP_PASSWORD=$(cat $OCP_PASSWORD_FILE)
              
              cat > test.properties << EOF
                # Specify openshift cluster address
                xtf.openshift.url=$OCP_API_URL
              
                # Credentials to the cluster
                xtf.openshift.admin.username=$OCP_USERNAME
                xtf.openshift.admin.password=$OCP_PASSWORD
              
                # Specify namespaces where actual tests will be done and where builds will be done
                xtf.config.master.namespace=$OCP_PROJECT
                xtf.bm.namespace=$OCP_PROJECT
              
                # Offline token used for insights-stage environment
                insights.offline.token=$PROD_OFFLINE_TOKEN
              
                # Override test agent URL
                insights.agent=https://repo1.maven.org/maven2/com/redhat/insights/runtimes-agent/1.0.3/runtimes-agent-1.0.3-shaded.jar  
              EOF
              
              mvn clean verify --no-transfer-progress
              
              # After the tests finish, record the overall result in the RESULT variable
              if [ "$?" -ne 0 ]
              then
                RESULT="FAILURE"
              else
                RESULT="SUCCESS"
              fi
